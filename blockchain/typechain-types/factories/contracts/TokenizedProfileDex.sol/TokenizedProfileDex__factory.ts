/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenizedProfileDex,
  TokenizedProfileDexInterface,
} from "../../../contracts/TokenizedProfileDex.sol/TokenizedProfileDex";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "SwapETHForTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "SwapTokensForETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "SwapTokensForTokens",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "swapETHForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "swapTokensForETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "swapTokensForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c03461014457601f610da238819003918201601f19168301916001600160401b0383118484101761014957808492604094855283398101031261014457610052602061004b8361015f565b920161015f565b906001600160a01b03808216156100ff578216156100ba5760805260a052604051610c2e908161017482396080518181816101050152818161039f015281816106d201526107e7015260a05181818160ab015281816104260152818161071501526108550152f35b60405162461bcd60e51b815260206004820152601460248201527f496e76616c6964205745544820616464726573730000000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527f496e76616c696420726f757465722061646472657373000000000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101445756fe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600090813560e01c8063078370cd14610744578063ad5c464814610701578063c31c9c07146106be578063f6458ca9146102ed5763f847f899146100645750610011565b60803660031901126102e957610078610a77565b60643562ffffff81168091036102465734156102b6576001600160a01b03828116959091906100a8871515610a8d565b827f00000000000000000000000000000000000000000000000000000000000000001692833b156102a8578551630d0e30db60e41b81528781848134895af180156102ac57908891610294575b5050855163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b038116848301908152346020808301919091529a919592908b908290819060400103818d8b5af1801561028a57928a928c9795926101bc99979561025d575b508a519661017788610ad1565b8752878701528986015233606086015260443560808601523460a086015260243560c08601528160e0860152885180978196829563414bf38960e01b84528301610b52565b0393165af1938415610252579361021e575b5081516001600160a01b0390911681523460208201526040810183905233907f4c8d20e37a3970898f750fee782c21410aa4fe6513487f5b3abc91b59be074479080606081015b0390a251908152f35b9092508381813d831161024b575b6102368183610b18565b81010312610246575191386101ce565b600080fd5b503d61022c565b8351903d90823e3d90fd5b61027c90893d8b11610283575b6102748183610b18565b810190610b3a565b503861016a565b503d61026a565b89513d8c823e3d90fd5b61029d90610b04565b6102a85786386100f5565b8680fd5b87513d8a823e3d90fd5b825162461bcd60e51b8152602081870152600d60248201526c09aeae6e840e6cadcc8408aa89609b1b6044820152606490fd5b5080fd5b50346102e95760c03660031901126102e957610307610a77565b926001600160a01b036024358082169003610246576044359062ffffff60a4351660a435036102465761033b821515610bb9565b80861692831561067b578160243516156106385784516323b872dd60e01b815233828201908152306020828101919091526040820186905298919089908290819060600103818b8a5af180156102ac5761061b575b50855163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03811684830190815260208101879052909291908a908290819060400103818c8b5af18015610611576105f4575b508651906bffffffffffffffffffffffff19809160601b168a83015262ffffff60e81b60a43560e81b16806034840152817f000000000000000000000000000000000000000000000000000000000000000060601b166037840152604b83015260243560601b16604e820152604281526080810167ffffffffffffffff828210818311176105df576101208301908111828210176105df579289868c96938b8a968998825280835260a081019233845261010060c0830192608435845260e081019a8b5201926064358452519a8b9863c04b8d5960e01b8a52890152519260a060248901528351938460c48a01528a875b8681106105b4575050509187988492868a999a958960e4809989010152511660448601525160648501525160848401525160a4830152601f80199101168101030193165af19586156105a9579561057a575b5083519283526024351685830152828201528260608201527f6c60dfa77621202c19886a83d996f4a7c764b2200c5f7cad231798add53179c260803392a251908152f35b9094508581813d83116105a2575b6105928183610b18565b8101031261024657519338610536565b503d610588565b8551903d90823e3d90fd5b92959950929550929698955081818401015160e4828d01015201928996928f959896928a8d966104e4565b604185634e487b7160e01b6000525260246000fd5b61060a908a3d8c11610283576102748183610b18565b50386103f3565b88513d8b823e3d90fd5b61063190893d8b11610283576102748183610b18565b5038610390565b606490602086519162461bcd60e51b8352820152601860248201527f496e76616c696420746f6b656e4f7574206164647265737300000000000000006044820152fd5b606490602086519162461bcd60e51b8352820152601760248201527f496e76616c696420746f6b656e496e20616464726573730000000000000000006044820152fd5b50346102e957816003193601126102e957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346102e957816003193601126102e957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346102e95760a03660031901126102e95761075e610a77565b6024356084359462ffffff8616809603610a735761077d821515610bb9565b6001600160a01b0383811696909590610797881515610a8d565b85516323b872dd60e01b81523384820190815230602082810191909152604082018790529991908a9082908190606001038187865af18015610a6957610a4c575b50865163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03811686830190815260208101889052909291908b9082908190604001038188865af18015610a4257918b93916108bc93610a25575b5089519061085082610ad1565b81528a7f0000000000000000000000000000000000000000000000000000000000000000169485858301528a82015230606082015260643560808201528760a082015260443560c08201528560e0820152858a519b8c8095819463414bf38960e01b83528b8301610b52565b0393165af19687156109ec5782976109f6575b50803b156102e9578180916024885180948193632e1a7d4d60e01b83528c898401525af180156109ec576109dd575b508080808089335af1903d156109d7573d9067ffffffffffffffff82116109c457865191610935601f8201601f19168b0184610b18565b8252883d92013e5b1561098c575082516001600160a01b03909216825260208201526040810183905233907ff648388853a921938c2f7c68a5576a93c70cef958c5f13b690650711ed498248908060608101610215565b835162461bcd60e51b8152908101869052601260248201527108cc2d2d8cac840e8de40e6cadcc8408aa8960731b6044820152606490fd5b634e487b7160e01b815260418452602490fd5b5061093d565b6109e690610b04565b386108fe565b86513d84823e3d90fd5b9096508781813d8311610a1e575b610a0e8183610b18565b810103126102e9575195386108cf565b503d610a04565b610a3b90853d8711610283576102748183610b18565b5038610843565b89513d87823e3d90fd5b610a62908a3d8c11610283576102748183610b18565b50386107d8565b88513d86823e3d90fd5b8480fd5b600435906001600160a01b038216820361024657565b15610a9457565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606490fd5b610100810190811067ffffffffffffffff821117610aee57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610aee57604052565b90601f8019910116810190811067ffffffffffffffff821117610aee57604052565b90816020910312610246575180151581036102465790565b91909160e06101008201938160018060a01b039182815116855282602082015116602086015262ffffff60408201511660408601528260608201511660608601526080810151608086015260a081015160a086015260c081015160c0860152015116910152565b15610bc057565b60405162461bcd60e51b815260206004820152601060248201526f4d7573742073656e6420746f6b656e7360801b6044820152606490fdfea2646970667358221220a990e6f2bd756beb6c37723114af60dd01a4330da3972419633c1acf503dc07964736f6c63430008140033";

type TokenizedProfileDexConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenizedProfileDexConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenizedProfileDex__factory extends ContractFactory {
  constructor(...args: TokenizedProfileDexConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _swapRouter: AddressLike,
    _weth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_swapRouter, _weth, overrides || {});
  }
  override deploy(
    _swapRouter: AddressLike,
    _weth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_swapRouter, _weth, overrides || {}) as Promise<
      TokenizedProfileDex & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TokenizedProfileDex__factory {
    return super.connect(runner) as TokenizedProfileDex__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenizedProfileDexInterface {
    return new Interface(_abi) as TokenizedProfileDexInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenizedProfileDex {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TokenizedProfileDex;
  }
}
